<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd"
       default-init-method="init-" default-destroy-method="destroy-">

    <bean id="jedisConnectionFactory"
          class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
        <!-- <constructor-arg index="0" value="#{ null }" />-->
        <constructor-arg index="0" ref="redisSentinelConfiguration"/>
        <constructor-arg index="1" ref="jedisPoolConfig"/>
        <property name="usePool" value="true"/>
        <property name="password" value="hsyt"/>
        <property name="database" value="${redis.server.database}"/>
        <property name="timeout" value="${redis.timeout}"/>

    </bean>
    <bean id="redisSentinelConfiguration" class="org.springframework.data.redis.connection.RedisSentinelConfiguration">
        <constructor-arg index="0" value="mymaster"/>
        <constructor-arg index="1">
            <set>
                <value>10.26.190.150:26379</value>
                <value>10.26.190.149:26379</value>
            </set>
        </constructor-arg>
    </bean>

    <!-- jedis pool配置 -->
    <bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
        <property name="maxTotal" value="${redis.pool.maxTotal}"/>
        <property name="maxIdle" value="${redis.pool.maxIdle}"/>
        <property name="minIdle" value="${redis.pool.minIdle}"/>
        <property name="maxWaitMillis" value="${redis.pool.maxWaitMillis}"/>
        <property name="testOnBorrow" value="${redis.pool.testOnBorrow}"/>
        <property name="testWhileIdle" value="${redis.pool.testWhileIdle}"/>
    </bean>

    <!-- Redis Template 使用spring的Redis模板 -->
    <bean id="redisTemplate" class="org.springframework.data.redis.core.StringRedisTemplate">
        <property name="connectionFactory" ref="jedisConnectionFactory"/>
    </bean>

    <!-- 直接使用 JedisSentinelPool （仿照云医院的配置）-->
    <bean id="jedisPool" class="redis.clients.jedis.JedisSentinelPool">
        <constructor-arg index="0" value="mymaster"/>
        <constructor-arg index="1">
            <set>
                <value>10.26.190.150:26379</value>
                <value>10.26.190.149:26379</value>
            </set>
        </constructor-arg>
        <constructor-arg index="2" ref="jedisPoolConfig"/>
        <constructor-arg index="3" value="${redis.timeout}"/>
        <constructor-arg index="4" value="hsyt"/>
        <constructor-arg index="5" value="${redis.server.database}"/>
    </bean>

    <!-- 直接使用 JedisPool  目前云医院的方式 -->
    <bean id="jedisPool2" class="redis.clients.jedis.JedisPool">
        <constructor-arg index="0" ref="jedisPoolConfig"/>
        <constructor-arg index="1" value="${redis.server.host}"/>
        <constructor-arg index="2" value="${redis.server.port}" type="int"/>
        <constructor-arg index="3" value="${redis.timeout}" type="int"/>
        <constructor-arg index="4" value="${redis.server.password}"/>
        <constructor-arg index="5" value="${redis.server.database}" type="int"/>
    </bean>

</beans>